devtools::document()
warnings()
devtools::document()
devtools::document()
library(GeoLift)
library(MarketMatching)
```{r libraries, results="hide", warning=F, message=F}
library(augsynth)
library(gsynth)
library(GeoLift)
library(dplyr)
library(doParallel)
library(foreach)
library(MarketMatching)
data(GeoLift_PreTest)
GeoLift_PreTest
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
head(GeoTestData_PreTest)
GeoPlot(GeoTestData_PreTest,
Y_id = "Y",
time_id = "time",
location_id = "location")
resultsNum <- NumberLocations(data = GeoTestData_PreTest,
Y_id = "Y",
location_id = "location",
time_id = "time",
n_sim = 500,
treatment_periods = 15,
plot = TRUE,
power = 0.8,
alpha = 0.1,
fixed_effects = TRUE,
ProgressBar = TRUE)
resultsSearch <- GeoLiftPower.search(data = GeoTestData_PreTest,
treatment_periods = c(15),
N = c(2,3,4),
horizon = 50,
Y_id = "Y",
location_id = "location",
time_id = "time",
top_results = 20,
alpha = 0.1,
type = "pValue",
fixed_effects = TRUE,
ProgressBar = TRUE)
remove.packages("GeoLift")
library(GeoLift)
library(GeoLift)
NumberLocations()
NumberLocations
devtools::build()
## Install GeoLift from github
devtools::install_github("ArturoEsquerra/GeoLift")
## Install GeoLift from github
devtools::install_github("ArturoEsquerra/GeoLift")
augsynth
detach("package:GeoLift", unload = TRUE)
data(GeoLift_PreTest)
detach("package:GeoLift", unload = TRUE)
GeoLift_PreTest
usethis::use_vignette("GeoLift_Walkthrough")
usethis::use_vignette("GeoLift_Walkthrough")
warning()
devtools::document()
library(GeoLift)
glue('My name is {name},',
'my age next year is {age + 1},',
'my anniversary is {format(anniversary, "%A, %B %d, %Y")}.')
glue::glue('My name is {name},',
'my age next year is {age + 1},',
'my anniversary is {format(anniversary, "%A, %B %d, %Y")}.')
name <- "Fred"
age <- 50
anniversary <- as.Date("1991-10-12")
glue::glue('My name is {name},',
'my age next year is {age + 1},',
'my anniversary is {format(anniversary, "%A, %B %d, %Y")}.')
paste0("Treatment size (",name)
paste0("Treatment size (",name, " should be <= to half of the amount of units: ", ncol(c(1,2,3)))
ncol(c(1,2,3))
ncol(matrix(0,2,2))
paste0("Treatment size (",name, " should be <= to half of the amount of units: ", ncol(matrix(0,2,2)))
devtools::document()
devtools::chech(vignettes = FALSE)
devtools::check(vignettes = FALSE)
devtools::document()
devtools::document()
devtools::document()
devtools::check(vignettes = FALSE)
devtools::document()
devtools::check(vignettes = FALSE)
devtools::check(vignettes = FALSE)
sessionInfo()
warning()
warnings()
library(GeoLift)
sessionInfo()
remove.packages(c("GeoLift", "augsynth"))
devtools::install_github("ebenmichael/augsynth")
devtools::install_github("ArturoEsquerra/GeoLift")
devtools::install_github("ArturoEsquerra/GeoLift")
library(augsynth)
library(gsynth)
library(GeoLift)
library(dplyr)
library(doParallel)
library(foreach)
library(MarketMatching)
data(GeoLift_PreTest)
head(GeoTestData_PreTest)
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
head(GeoTestData_PreTest)
data(GeoLift_PreTest)
library(GeoLift)
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
data(GeoLift_PreTest)
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
head(GeoTestData_PreTest)
GeoPlot(GeoTestData_PreTest,
Y_id = "Y",
time_id = "time",
location_id = "location")
resultsNum <- NumberLocations(data = GeoTestData_PreTest,
Y_id = "Y",
location_id = "location",
time_id = "time",
n_sim = 500,
treatment_periods = 15,
plot = TRUE,
power = 0.8,
alpha = 0.1,
fixed_effects = TRUE,
ProgressBar = TRUE)
library(GeoLift)
data(GeoLift_PreTest)
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
head(GeoTestData_PreTest)
GeoPlot(GeoTestData_PreTest,
Y_id = "Y",
time_id = "time",
location_id = "location")
resultsNum <- NumberLocations(data = GeoTestData_PreTest,
Y_id = "Y",
location_id = "location",
time_id = "time",
n_sim = 500,
treatment_periods = 15,
plot = TRUE,
power = 0.8,
alpha = 0.1,
fixed_effects = TRUE,
ProgressBar = TRUE)
1:500
library(GeoLift)
locs <- c("chicago", "portland")
GeoTestDataD <- GeoLift::fn_treatment(df = GeoTestData_PreTest,
locations = locs,
treatment_start_time = 91,
treatment_end_time = 105)
data(GeoLift_PreTest)
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
locs <- c("chicago", "portland")
GeoTestDataD <- GeoLift::fn_treatment(df = GeoTestData_PreTest,
locations = locs,
treatment_start_time = 91,
treatment_end_time = 105)
start_time <- Sys.time()
augsyn_None <- augsynth::augsynth(Y ~ D, unit = location, time = time,
data = GeoTestDataD,
t_int = 151,
progfunc = "None", scm = T)
elapsed_time <- Sys.time() - start_time
elapsed_time
summary(augsyn_None)
augsyn_None <- augsynth::augsynth(Y ~ D, unit = location, time = time,
data = GeoTestDataD,
t_int = 151,
progfunc = "None", scm = T)
augsyn_None <- augsynth::augsynth(Y ~ D, unit = location, time = time,
data = GeoTestDataD,
t_int = 91,
progfunc = "None", scm = T)
augsyn_None <- augsynth::augsynth(Y ~ D, unit = location, time = time,
data = GeoTestDataD,
t_int = 91,
progfunc = "None", scm = T)
locs <- c("chicago", "portland")
GeoTestDataD <- GeoLift::fn_treatment(df = GeoTestData_PreTest,
locations = locs,
treatment_start_time = 91,
treatment_end_time = 105)
start_time <- Sys.time()
augsyn_None <- augsynth::augsynth(Y ~ D, unit = location, time = time,
data = GeoTestDataD,
t_int = 91,
progfunc = "None", scm = T)
elapsed_time <- Sys.time() - start_time
elapsed_time
summary(augsyn_None)
GeoTestDataD
GeoTestDataD[GeoTestDataD$location == "chicago",]
data(GeoLift_Test)
GeoTestData_Test <- GeoDataRead(data = GeoLift_Test,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
head(GeoTestData_Test)
locs <- c("chicago", "portland")
GeoTest <- GeoLift(Y_id = "Y",
data = GeoTestData_Test,
locations = locs,
treatment_start_time = 91,
treatment_end_time = 105)
GeoTestDataD <- GeoLift::fn_treatment(df = GeoTestData_PreTest,
locations = locs,
treatment_start_time = 91,
treatment_end_time = 105)
GeoTestDataD <- GeoLift::fn_treatment(df = GeoTestData_Test,
locations = locs,
treatment_start_time = 91,
treatment_end_time = 105)
start_time <- Sys.time()
augsyn_None <- augsynth::augsynth(Y ~ D, unit = location, time = time,
data = GeoTestDataD,
t_int = 91,
progfunc = "None", scm = T)
elapsed_time <- Sys.time() - start_time
elapsed_time
summary(augsyn_None)
GeoLift::pvalueCalc(
data = GeoTestData_Test,
sim = 1,
max_time = 105,#max_time,
tp = 15,
es = 0,
locations = locs,
cpic = 0,
X = c(),
model = "none")
warnings()
str(augsyn_None)
augsynth:::compute_permute_pval(augsyn_None$data, augsyn_None, 0, ncol(augsyn_None$data$y),
type = "iid", q = 1, ns = 1000)
.libpaths()
augsynth:::compute_permute_pval(augsyn_None$data, augsyn_None, 0, ncol(augsyn_None$data$y),
type = "iid", q = 1, ns = 1000, stat_func = NULL)
library(GeoLift)
data(GeoLift_PreTest)
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
head(GeoTestData_PreTest)
GeoPlot(GeoTestData_PreTest,
Y_id = "Y",
time_id = "time",
location_id = "location")
resultsNum <- NumberLocations(data = GeoTestData_PreTest,
Y_id = "Y",
location_id = "location",
time_id = "time",
n_sim = 500,
treatment_periods = 15,
plot = TRUE,
power = 0.8,
alpha = 0.1,
fixed_effects = TRUE,
ProgressBar = TRUE)
library(GeoLift)
data(GeoLift_PreTest)
GeoTestData_PreTest <- GeoDataRead(data = GeoLift_PreTest,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
head(GeoTestData_PreTest)
GeoPlot(GeoTestData_PreTest,
Y_id = "Y",
time_id = "time",
location_id = "location")
resultsNum <- NumberLocations(data = GeoTestData_PreTest,
Y_id = "Y",
location_id = "location",
time_id = "time",
n_sim = 500,
treatment_periods = 15,
plot = TRUE,
power = 0.8,
alpha = 0.1,
fixed_effects = TRUE,
ProgressBar = TRUE)
resultsSearch <- GeoLiftPower.search(data = GeoTestData_PreTest,
treatment_periods = c(15),
N = c(2,3,4),
horizon = 50,
Y_id = "Y",
location_id = "location",
time_id = "time",
top_results = 20,
alpha = 0.1,
type = "pValue",
fixed_effects = TRUE,
ProgressBar = TRUE)
library(GeoLift)
resultsSearch <- GeoLiftPower.search(data = GeoTestData_PreTest,
treatment_periods = c(15),
N = c(2,3,4),
horizon = 50,
Y_id = "Y",
location_id = "location",
time_id = "time",
top_results = 20,
alpha = 0.1,
type = "pValue",
fixed_effects = TRUE,
ProgressBar = TRUE)
resultsNum <- NumberLocations(data = GeoTestData_PreTest,
Y_id = "Y",
location_id = "location",
time_id = "time",
n_sim = 500,
treatment_periods = 15,
plot = TRUE,
power = 0.8,
alpha = 0.1,
fixed_effects = TRUE,
ProgressBar = TRUE)
warnings()
library(GeoLift)
resultsSearch <- GeoLiftPower.search(data = GeoTestData_PreTest,
treatment_periods = c(15),
N = c(2,3,4),
horizon = 50,
Y_id = "Y",
location_id = "location",
time_id = "time",
top_results = 20,
alpha = 0.1,
type = "pValue",
fixed_effects = TRUE,
ProgressBar = TRUE)
head(resultsSearch,50)
MarketSelection(GeoTestData_PreTest, location_id = "location", time_id = "time", Y_id = "Y")[1:5,1:5]
library(GeoLift)
resultsFind <- GeoLiftPowerFinder(data = GeoTestData_PreTest,
treatment_periods = c(10,15),
N = c(2,3,4),
Y_id = "Y",
location_id = "location",
time_id = "time",
effect_size = seq(0, 0.5, 0.05),
top_results = 5,
alpha = 0.1,
fixed_effects = TRUE,
ProgressBar = TRUE,
plot_best = TRUE)
head(resultsFind,10)
locs <- c("chicago", "portland")
resultsPow <- GeoLiftPower(GeoTestData_PreTest,
locations = locs,
effect_size = seq(0,0.25,0.01),
treatment_periods = c(10,15),
horizon = 50,
Y_id = "Y",
location_id = "location",
time_id = "time",
cpic = 7.50)
plot(resultsPow, actual_values = TRUE)
GeoTestData_Test <- GeoDataRead(data = GeoLift_Test,
date_id = "date",
location_id = "location",
Y_id = "Y",
format = "yyyy-mm-dd")
head(GeoTestData_Test)
GeoPlot(GeoTestData_Test,
Y_id = "Y",
time_id = "time",
location_id = "location",
treatment_start = 91)
GeoTest <- GeoLift(Y_id = "Y",
data = GeoTestData_Test,
locations = locs,
treatment_start_time = 91,
treatment_end_time = 105)
summary(GeoTest)
plot(GeoTest, type = "Lift")
plot(GeoTest, type = "ATT")
GeoTestBest <- GeoLift(Y_id = "Y",
data = GeoTestData_Test,
locations = locs,
treatment_start_time = 91,
treatment_end_time = 105,
model = "best")
plot(GeoTestBest, type = "Lift")
plot(GeoTestBest, type = "ATT")
summary(GeoTestBest)
devtools::document()
devtools::check()
devtools::check(vignettes = FALSE)
sessionInfo()
data(GeoLift_Test)
GeoPlot(GeoTestData_Test,
Y_id = "Y",
time_id = "time",
location_id = "location",
treatment_start = 91)
locs <- c("chicago", "portland")
GeoTestData_Test$Y <- GeoTestData_Test[GeoTestData_Test$location %in% locs,]$Y * 1.3
GeoTest <- GeoLift(Y_id = "Y",
data = GeoTestData_Test,
locations = locs,
treatment_start_time = 91,
treatment_end_time = 105)
summary(GeoTest)
plot(GeoTest, type = "Lift")
data(GeoLift_Test)
locs <- c("chicago", "portland")
GeoPlot(GeoTestData_Test,
Y_id = "Y",
time_id = "time",
location_id = "location",
treatment_start = 91)
GeoTestData_Test$Y <- GeoTestData_Test[GeoTestData_Test$location %in% locs && GeoTestData_Test$time > 90,]$Y * 1.3
GeoTestData_Test$Y <- GeoTestData_Test[GeoTestData_Test$location %in% locs & GeoTestData_Test$time > 90,]$Y * 1.3
data(GeoLift_Test)
locs <- c("chicago", "portland")
GeoPlot(GeoTestData_Test,
Y_id = "Y",
time_id = "time",
location_id = "location",
treatment_start = 91)
GeoTestData_Test$Y <- GeoTestData_Test[GeoTestData_Test$location %in% locs & GeoTestData_Test$time > 90,]$Y * 1.3
data(GeoLift_Test)
locs <- c("chicago", "portland")
GeoPlot(GeoTestData_Test,
Y_id = "Y",
time_id = "time",
location_id = "location",
treatment_start = 91)
View(GeoLift_Test)
head(GeoLift_Test)
view(GeoLift_Test)
library(GeoLift)
data(GeoLift_Test)
locs <- c("chicago", "portland")
GeoPlot(GeoTestData_Test,
Y_id = "Y",
time_id = "time",
location_id = "location",
treatment_start = 91)
rm(GeoTestData_Test)
data(GeoLift_Test)
GeoPlot(GeoTestData_Test,
Y_id = "Y",
time_id = "time",
location_id = "location",
treatment_start = 91)
data(GeoLift_Test)
